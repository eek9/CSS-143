#BlueJ class context
comment0.target=List
comment0.text=The\ List\ class\ will\ build\ a\ List\ data\ structure\ so\ that\r\n\ our\ other\ following\ classes(Stack\ and\ Queue)\ will\ be\ able\ to\ inherit\r\n\ from\ it\ and\ borrow\ some\ of\ the\ methods\ from\ this\ class\ to\ use\ as\ their\r\n\ own\ in\ terms\ of\ how\ to\ add\ and\ remove\ based\ on\ their\ own\ structures.\r\n\r\n\ @author\ Eunhee\ Kim\r\n\ @version\ October\ 14,\ 2019\r\n
comment1.params=next\ index
comment1.target=void\ insert(java.lang.Object,\ int)
comment1.text=this\ method\ will\ insert\ an\ Object\ of\ "next"\ at\ the\ intended\ index\ that\ is\r\n\ recorded\ in\ the\ parameter\r\n\r\n\ @param\ index\ integer\ of\ an\ index\ where\ you\ want\ to\ add\ the\ object\r\n\ @param\ next\ Object\ next\ of\ what\ you\ want\ added\r\n\ @exception\ LinkedListException\r\n
comment2.params=index
comment2.target=java.lang.Object\ remove(int)
comment2.text=This\ method\ will\ remove\ the\ node\ from\ the\ index\ that\ is\ passed\ in\ the\r\n\ parameter\r\n\r\n\ @param\ index\ integer\ index\ of\ node\ from\ what\ location\ to\ remove\r\n\ @return\ Object\ of\ what\ will\ be\ removed\ from\ list\r\n\ @exception\ LinkedListException\r\n
comment3.params=next
comment3.target=void\ append(java.lang.Object)
comment3.text=This\ method\ will\ add\ an\ object\ to\ the\ end\ of\ the\ list\r\n\r\n\ @param\ next\ Object\ next\ that\ is\ to\ be\ added\ to\ the\ list\r\n\ @exception\ LinkedListException\r\n
comment4.params=index
comment4.target=void\ delete(int)
comment4.text=This\ method\ deletes\ the\ node\ at\ the\ index\ that\ is\ passed\ in\ the\ parameter\r\n\r\n\ @param\ index\ integer\ index\ of\ location\ to\ delete\ node\r\n
comment5.params=
comment5.target=int\ size()
comment5.text=This\ method\ will\ get\ the\ size\ of\ the\ list\r\n\r\n\ @return\ integer\ of\ the\ count\ of\ elements\ from\ list\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=This\ method\ will\ override\ the\ toString\ method\ and\ print\ out\r\n\ the\ whole\ list\r\n\r\n\ @return\ String\ of\ list\ of\ nodes\r\n
comment7.params=
comment7.target=boolean\ isEmpty()
comment7.text=This\ method\ will\ check\ to\ see\ if\ the\ list\ is\ not\ empty\r\n\r\n\ @return\ boolean\ value\ of\ true\ if\ the\ list\ is\ empty\ and\ false\ if\ it\ is\ filled\r\n
comment8.params=target
comment8.target=int\ indexOf(java.lang.Object)
comment8.text=This\ method\ will\ find\ the\ index\ of\ an\ object\ from\ a\ list\r\n\r\n\ @param\ target\ Object\ target\ of\ what\ to\ find\ in\ the\ list\r\n\ @return\ integer\ of\ the\ index\ where\ the\ target\ is\ found\r\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
numComments=10
