#BlueJ class context
comment0.target=Ingredient
comment0.text=This\ Ingredient\ class\ include\ instance\ variables\ that\ include\ a\ description,\r\n\ cost,\ and\ calorie\ count\ of\ an\ Ingredient.\ The\ methods\ contained\ in\ this\r\n\ class\ will\ include\ accessors\ and\ mutators\ for\ the\ instances.\ This\ class\r\n\ also\ implements\ from\ the\ Comparable\ class\ to\ override\ the\ compareTo\ method\r\n\ into\ this\ class\ for\ comparing\ the\ prices\ of\ two\ different\ Ingredient\ objects\r\n\r\n\ @author\ Eunhee\ Kim\r\n\ @version\ December\ 5,\ 2019\r\n
comment1.params=
comment1.target=Ingredient()
comment1.text=default\ constructor\ initializes\ the\ values\ of\ cost\ and\ calories\ to\ zero,\r\n\ as\ well\ as\ the\ description\ to\ nothing\r\n
comment10.params=
comment10.target=Ingredient\ getIngredient()
comment10.text=this\ method\ will\ return\ the\ Ingredient\ object\r\n\ @return\ Ingredient\ object\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=this\ is\ a\ overridden\ toString()\ method\ where\ it\ will\ print\ out\ the\ description,\ cost,\r\n\ and\ calories\ of\ the\ Ingredient\r\n\ @return\ String\ output\ of\ information\r\n
comment12.params=o
comment12.target=boolean\ equals(java.lang.Object)
comment12.text=this\ is\ a\ overridden\ equals\ method\ that\ will\ compare\ two\ objects\ and\ its\ instance\ variables\ if\r\n\ they\ are\ equal\ or\ not\r\n\ @param\ o\ comparing\ Object\r\n\ @return\ boolean\ value\ if\ two\ objects\ are\ equal\ or\ not\r\n
comment13.params=o
comment13.target=int\ compareTo(java.lang.Object)
comment13.text=this\ method\ will\ give\ an\ integer\ value\ based\ on\ the\ price\ of\ two\ comparing\ Ingredient\ objects\r\n\ @param\ o\ comparing\ Ingredient\ object\r\n\ @return\ int\ of\ either\ -1(comparing\ price\ is\ lower),\ 0(price\ is\ equal),\ or\ 1(price\ is\ higher)\r\n
comment14.params=args
comment14.target=void\ main(java.lang.String[])
comment14.text=this\ will\ contain\ a\ driver\ method\ of\ where\ the\ methods\ in\ this\ class\r\nwill\ be\ tested\r\n
comment2.params=d\ m\ c
comment2.target=Ingredient(java.lang.String,\ Money,\ int)
comment2.text=constructor\ method\ that\ will\ initialize\ the\ values\ of\ the\ description,\r\n\ cost,\ and\ calorie\ count\ of\ an\ ingredient\ object\r\n\ @param\ c\ this\ is\ the\ string\ description\ of\ the\ name\ of\ the\ ingredient\r\n\ @param\ d\ Money\ object\ of\ the\ cost\ of\ the\ ingredient\r\n\ @param\ m\ int\ calorie\ count\ of\ the\ ingredient\r\n
comment3.params=a
comment3.target=Ingredient(Ingredient)
comment4.params=
comment4.target=java.lang.String\ getDescript()
comment4.text=this\ method\ will\ return\ the\ name/description\ of\ the\ ingredient\r\n\ @return\ String\ description\ of\ ingredient\r\n
comment5.params=d
comment5.target=void\ setDescript(java.lang.String)
comment5.text=this\ method\ will\ set\ a\ new\ name/description\ into\ an\ ingredient\r\n\ @param\ d\ the\ String\ of\ new\ name\r\n
comment6.params=
comment6.target=Money\ getCost()
comment6.text=the\ method\ that\ will\ return\ the\ Money\ object\r\n\ @return\ Money\ object\r\n
comment7.params=m
comment7.target=void\ setCost(Money)
comment7.text=this\ method\ will\ set\ new\ values\ from\ a\ money\ object\r\n\ @param\ m\ the\ new\ Money\ object\ to\ set\ the\ new\ values\r\n
comment8.params=
comment8.target=int\ getCalories()
comment8.text=this\ method\ will\ get\ the\ value\ of\ calories\ of\ an\ Ingredient\r\n\ @return\ int\ value\ of\ calories\ in\ Ingredient\r\n
comment9.params=c
comment9.target=void\ setCalories(int)
comment9.text=this\ method\ will\ set\ new\ calorie\ count\ into\ an\ Ingredient\r\n\ @param\ c\ int\ of\ new\ calories\ to\ set\r\n
numComments=15
