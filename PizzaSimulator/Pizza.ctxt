#BlueJ class context
comment0.target=Pizza
comment0.text=This\ method\ will\ record\ all\ the\ Ingredients,\ and\ its\ total\ calories,\ cost,\ shape,\ and\r\n\ fraction\ remaining\ in\ a\ Pizza\ object.\ It\ also\ uses\ the\ PizzaComparable\r\n\ interface\ methods\ to\ compare\ the\ prices,\ sizes,\ and\ areas\ of\ comparing\r\n\ pizza\ objects.\r\n\r\n\ @author\ Eunhee\ Kim\r\n\ @version\ December\ 5,\ 2019\r\n
comment1.params=
comment1.target=Pizza()
comment1.text=this\ is\ a\ constructor\ for\ the\ Pizza\ class\ that\ will\ automatically\r\n\ create\ another\ random\ pizza\ object\r\n
comment10.params=a
comment10.target=void\ addIngredient(Ingredient)
comment10.text=this\ method\ will\ add\ another\ ingredient\ to\ the\ pizza\ and\ add\ the\ ingredient's\r\n\ price\ and\ calories\ to\ the\ total\ calories\ and\ cost\ of\ the\ whole\ pizza\r\n\ @param\ a\ is\ the\ Ingredient\ object\ that\ will\ be\ added\ into\ the\ pizza\r\n
comment11.params=amt
comment11.target=void\ eatSomePizza(Fraction)
comment11.text=this\ method\ will\ subtract\ a\ fraction\ amount\ from\ a\ pizza\r\n\ @param\ amt\ Fraction\ amount\ to\ be\ eaten\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=this\ overriden\ method\ will\ print\ out\ the\ information\ of\ a\ pizza\ with\ its\ cost,\r\n\ shape,\ and\ remaining\ amount\ of\ pizza\ left\r\n\ @return\ String\ of\ the\ record\ in\ pizza\r\n
comment13.params=o
comment13.target=int\ compareTo(java.lang.Object)
comment13.text=this\ overriden\ method\ will\ compare\ the\ cost\ of\ different\r\n\ pizzas\ and\ return\ different\ integers\ based\ on\ whether\ the\ comparing\r\n\ object\ is\ greater\ or\ less\ than\ the\ pizza\r\n\ @return\ int\ of\ either\ -1(comparing\ price\ is\ lower),\ 0(price\ is\ equal),\ or\ 1(price\ is\ higher)\r\n
comment14.params=o
comment14.target=int\ compareToBySize(java.lang.Object)
comment14.text=this\ overridden\ method\ will\ compare\ the\ size\ of\ different\r\n\ pizzas\ and\ return\ different\ integers\ based\ on\ whether\ the\ comparing\r\n\ object\ is\ greater\ or\ less\ than\ the\ pizza\r\n\ @return\ int\ of\ either\ -1(comparing\ size\ is\ lower),\ 0(size\ is\ equal),\ or\ 1(size\ is\ higher)\r\n
comment15.params=o
comment15.target=int\ compareToByCalories(java.lang.Object)
comment15.text=this\ overridden\ method\ will\ compare\ the\ calories\ of\ different\r\n\ pizzas\ and\ return\ different\ integers\ based\ on\ whether\ the\ comparing\r\n\ object\ is\ greater\ or\ less\ than\ the\ pizza\r\n\ @return\ int\ of\ either\ -1(comparing\ calories\ is\ lower),\ 0(calories\ is\ equal),\ or\ 1(calories\ is\ higher)\r\n
comment16.params=args
comment16.target=void\ main(java.lang.String[])
comment16.text=this\ will\ contain\ a\ driver\ method\ of\ where\ the\ methods\ in\ this\ class\r\nwill\ be\ tested\r\n
comment2.params=
comment2.target=Fraction\ getRemaining()
comment2.text=this\ method\ will\ return\ a\ fraction\ of\ how\ much\ of\ the\ pizza\ that\ is\ left\r\n\ @return\ Fraction\ object\ that\ represents\ the\ amount\ left\ in\ the\ pizza\r\n
comment3.params=f
comment3.target=void\ setRemaining(Fraction)
comment3.text=this\ method\ will\ set\ a\ new\ amount\ of\ remaining\ pizza\r\n\ @param\ f\ Fraction\ object\ that\ will\ reset\ the\ remaining\r\n
comment4.params=
comment4.target=int\ getCalories()
comment4.text=this\ method\ will\ return\ the\ value\ of\ how\ many\ calories\ in\ a\ pizza\r\n\ @return\ integer\ of\ calories\r\n
comment5.params=cal
comment5.target=void\ setCalories(int)
comment5.text=this\ method\ will\ set\ the\ calories\ of\ a\ pizza\ object\ into\ a\ new\ integer\r\n\ this\ method\ is\ only\ used\ when\ adjusting\ the\ calories\ of\ the\ pizza\ after\ it\ has\ been\ eaten\r\n\ @param\ cal\ int\ calories\ to\ set\ into\ pizza\ object\r\n
comment6.params=
comment6.target=Money\ getTotalCost()
comment6.text=this\ method\ will\ return\ the\ total\ cost\ of\ the\ pizza\r\n\ @return\ Money\ object\ of\ the\ cost\ of\ pizza\r\n
comment7.params=
comment7.target=double\ getRemainingArea()
comment7.text=this\ method\ will\ return\ the\ value\ of\ the\ remaining\ area\ of\ the\ pizza\ left\r\n\ @return\ double\ value\ of\ the\ area\ of\ pizza\ left\r\n
comment8.params=s
comment8.target=void\ setShape(Shape)
comment8.text=this\ method\ will\ set\ the\ shape\ of\ the\ pizza\r\n\ @param\ s\ Shape\ object\ that\ will\ set\ the\ shape\r\n
comment9.params=
comment9.target=Shape\ getShape()
comment9.text=this\ method\ will\ return\ the\ shape\ of\ the\ pizza\r\n\ @return\ Shape\ object\ of\ the\ pizza\r\n
numComments=17
